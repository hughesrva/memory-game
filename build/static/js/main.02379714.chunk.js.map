{"version":3,"sources":["components/Navbar.jsx","components/Header.jsx","components/Body.jsx","components/Tile.jsx","App.js","index.js"],"names":["Navbar","props","react_default","a","createElement","className","score","highScore","Header","id","Body","children","Tile","onClick","handleClickEvent","data-id","src","url","alt","App","state","tiles","clicked","event","_this","includes","target","dataset","gameOver","push","setState","console","log","shuffle","array","sort","Math","random","this","_this2","components_Navbar","components_Header","components_Body","map","tile","components_Tile","key","Component","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.02379714.chunk.js","sourcesContent":["import React from \"react\";\r\n\r\n// \"navbar\" showing game title and dynamic score values\r\nfunction Navbar(props) {\r\n  return (\r\n    <nav className=\"navbar is-vcentered\">\r\n      <div className=\"container\">\r\n        <div className=\"navbar-menu\">\r\n          <div className=\"navbar-start\">\r\n            <div className=\"navbar-item\">\r\n              <h1 className=\"title\">Memory Game</h1>\r\n            </div>\r\n          </div>\r\n          <div className=\"navbar-end\">\r\n            <div className=\"navbar-item\">\r\n              <h1 className=\"title\">\r\n                Score: {props.score} | High Score: {props.highScore}\r\n              </h1>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </nav>\r\n  );\r\n}\r\n\r\nexport default Navbar;\r\n","import React from \"react\";\r\n\r\n// static instructions message\r\nfunction Header() {\r\n  return (\r\n    <div className=\"container has-text-centered\" id=\"headerBox\">\r\n      <div className=\"content\" id=\"headerMsg\">\r\n        <h1 className=\"subtitle is-marginless\">\r\n          Clicking on an image will earn you a point, but be careful!\r\n        </h1>\r\n        <h1 className=\"subtitle is-marginless\">\r\n          If you click on the same image twice it's game over.\r\n        </h1>\r\n        <h1 className=\"subtitle is-marginless\">Click any image to begin!</h1>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;\r\n","import React from \"react\";\r\n\r\n// game body that tiles are filled into\r\nfunction Body(props) {\r\n  return (\r\n    <div className=\"columns is-centered\">\r\n      <div className=\"column is-two-thirds\">\r\n        <div className=\"columns is-multiline is-vcentered is-centered\" id=\"bodyBox\">\r\n          {props.children}\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Body;\r\n","import React from \"react\";\r\n\r\n// reusable tile divs that take in the URL and IDs from the tiles array from App.js\r\nfunction Tile(props) {\r\n  return (\r\n    <div className=\"gameTile column is-narrow\">\r\n      <div className=\"card\" onClick={props.handleClickEvent} data-id={props.id}>\r\n        <div className=\"card-image\" data-id={props.id}>\r\n          <figure className=\"image\" data-id={props.id}>\r\n            <img src={props.url} alt=\"Great dog!\" data-id={props.id} />\r\n          </figure>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Tile;\r\n","import React, { Component } from \"react\";\r\nimport Navbar from \"./components/Navbar\";\r\nimport Header from \"./components/Header\";\r\nimport Body from \"./components/Body\";\r\nimport Tile from \"./components/Tile\";\r\nimport tiles from \"./tiles.json\";\r\n\r\nclass App extends Component {\r\n  state = {\r\n    tiles,\r\n    score: 0,\r\n    highScore: 0,\r\n    clicked: []\r\n  };\r\n\r\n  // function to reset score value and clicked array, and save high score if that's the case\r\n  gameOver() {\r\n    if (this.state.score > this.state.highScore) {\r\n      this.setState({ highScore: this.state.score });\r\n    }\r\n    this.setState({ score: 0 });\r\n    this.setState({ clicked: [] });\r\n  }\r\n\r\n  handleClickEvent = event => {\r\n\r\n    // if tile was already clicked, runs game over function\r\n    if (this.state.clicked.includes(event.target.dataset.id)) {\r\n      this.gameOver();\r\n    } else {\r\n      // if tile was not already clicked, increases score and adds tile's id to clicked array\r\n      this.state.clicked.push(event.target.dataset.id);\r\n      this.setState({ score: this.state.score + 1 });\r\n\r\n      // if user has clicked all tiles, runs game over function\r\n      if (this.state.score === 12) {\r\n        this.gameOver();\r\n      }\r\n    }\r\n    console.log(this.state.clicked);\r\n\r\n    // shuffles tiles array and re-renders based on the new state of the array\r\n    this.shuffle(tiles);\r\n    this.setState({ tiles });\r\n  };\r\n\r\n  shuffle = array => {\r\n    array.sort(() => Math.random() - 0.5);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Navbar score={this.state.score} highScore={this.state.highScore} />\r\n        <div className=\"section\">\r\n          <div className=\"container-fluid\">\r\n            <Header />\r\n\r\n            <Body>\r\n              {this.state.tiles.map(tile => (\r\n                <Tile\r\n                  url={tile.url}\r\n                  key={tile.id}\r\n                  id={tile.id}\r\n                  handleClickEvent={this.handleClickEvent}\r\n                />\r\n              ))}\r\n            </Body>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport App from \"./App\";\r\n\r\nReactDOM.render(<App />, document.getElementById(\"root\"));\r\n"],"sourceRoot":""}